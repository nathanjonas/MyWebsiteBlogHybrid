{"version":3,"sources":["Contact/Contact.js","About-Me/AboutMe.js","Projects/ColorTheFace/CssProject.js","Projects/Projects.js","Projects/projectList.js","Home/Home.js","layout/NavListItem.js","layout/SocialMediaHeader.js","App.js","serviceWorker.js","reducer/colors/index.js","reducer/index.js","reducer/colors/actions.js","index.js"],"names":["Contact","type","value","Component","techlist","AboutMe","state","skills","filter","handleChange","event","setState","target","this","filteredSkills","item","toLowerCase","includes","className","onChange","placeholder","map","skill","class","CssProject","props","changeColor","color","facialFeature","eyeColor","mouthColor","faceColor","currentFeature","onClick","colors","slice","style","backgroundColor","hex","connect","projects","Object","values","Name","ProjectDescription","Route","GithubLink","PrimaryColor","SecondaryColor","Projects","project","to","path","component","href","Home","NavListItem","route","linkText","clickHandler","SocialMediaHeader","App","useState","isHomepage","setIsHomepage","exact","Boolean","window","location","hostname","match","initialState","combineReducers","action","store","createStore","reducer","compose","applyMiddleware","thunk","devToolsExtension","f","dispatch","fetch","then","res","json","setColors","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f8135da.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n \nexport default class Contact extends Component {\n  render() {\n    return (\n      <form>\n        <label type=\"text\" value=\"test\"/>\n      </form>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nvar techlist = [\n  \"jQuery\",\n  \"AJAX\",\n  \"Typescript\",\n  \"Java\",\n  \"C++\",\n  \"C#\",\n  \"SQL\",\n  \"Python\",\n  \"HTML\",\n  \"JavaScript\",\n  \"CSS\",\n  \"ASP.NET\",\n  \"Vue\",\n  \"React\",\n  \"Django\",\n  \"Windows\",\n  \"MacOS\",\n  \"Ubuntu\",\n  \"Chrome Dev. Tools\",\n  \"GitHub\",\n  \"GitLab\",\n  \"VS Code\",\n  \"Node\",\n];\n\nexport default class AboutMe extends Component {\n  state = {\n    skills: techlist,\n    filter: \"\",\n  };\n\n  handleChange = (event) => {\n    this.setState({ filter: event.target.value });\n  };\n\n  render() {\n    const { filter, skills } = this.state;\n\n    const filteredSkills = skills.filter((item) => {\n      return item.toLowerCase().includes(filter.toLowerCase());\n    });\n\n    return (\n      <div className=\"aboutMe\">\n        {/* <img src=\"personalpic.jpg\" alt=\"Italian Trulli\" /> */}\n        <h2 className=\"aboutMeHeader\">Welcome to my site</h2>\n        <div className=\"aboutMeBody\">\n          Hello world. I am a computer science student at the University of\n          Cincinnati (UC), and I hope you enjoy this React project. Throughout\n          my time at UC, I have been exposed to the digital world in the form of\n          classroom and professional experience. I love it. I hope to continue\n          my work upon graduation (04/2021) and begin my career as a software\n          developer and designer.\n        </div>\n        <h2 className=\"aboutMeHeader\">Check out my skills...</h2>\n        <div className=\"searchBar\">\n          <input className=\"searchBarModule\" type=\"text\" value={filter} onChange={this.handleChange} placeholder=\"Search...\"/>\n        </div>\n        <div className=\"skillContainer\">\n          {filteredSkills.map((skill) => {\n            return <div class=\"skill\">{skill}</div>;\n          })}\n        </div>\n        <div className=\"test\">\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./CssProject.css\";\n\nconst mapStateToProps = ({ colors }) => ({\n  colors,\n});\n\nclass CssProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      eyeColor: \"blue\",\n      mouthColor: \"red\",\n      faceColor: \"yellow\",\n      currentFeature: \"eyes\",\n    };\n  }\n\n  changeColor = (color, facialFeature) => {\n    switch (facialFeature) {\n      case \"eyes\":\n        this.setState({\n          eyeColor: color,\n        });\n        break;\n      case \"mouth\":\n        this.setState({\n          mouthColor: color,\n        });\n        break;\n      default:\n        this.setState({\n          faceColor: color,\n        });\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"buttonContainer\">\n          <button\n            className=\"buttonOption\"\n            onClick={() => this.setState({ currentFeature: \"eyes\" })}\n          >\n            Eyes\n          </button>\n          <button\n            className=\"buttonOption\"\n            onClick={() => this.setState({ currentFeature: \"mouth\" })}\n          >\n            Mouth\n          </button>\n          <button\n            className=\"buttonOption\"\n            onClick={() => this.setState({ currentFeature: \"face\" })}\n          >\n            Face\n          </button>\n        </div>\n        <div className=\"chooseColorLine\">\n          Please choose a color for Mr.Smiley's{\" \"}\n          <b>{this.state.currentFeature}</b>\n        </div>\n        <div className=\"colorContainer\">\n          {this.props.colors.slice(0, 600).map((color) => {\n            return (\n              <div\n                className=\"colorDiv\"\n                style={{ backgroundColor: color.hex }}\n                onClick={() =>\n                  this.changeColor(color.hex, this.state.currentFeature)\n                }\n              ></div>\n            );\n          })}\n        </div>\n        <div className=\"face\" style={{ backgroundColor: this.state.faceColor }}>\n          <div\n            className=\"eye\"\n            style={{ backgroundColor: this.state.eyeColor }}\n          ></div>\n          <div\n            className=\"eye\"\n            style={{ backgroundColor: this.state.eyeColor }}\n          ></div>\n          <div\n            className=\"mouth\"\n            style={{ backgroundColor: this.state.mouthColor }}\n          ></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(CssProject);\n","import React, { Component } from \"react\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport CssProject from \"./ColorTheFace/CssProject\";\nimport config from \"./projectList\";\n\nconst projects = Object.values(config.projects);\n\nexport default class Projects extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"ProjectContainer\">\n          <div className=\"ProjectContainerHeader\">My Projects</div>\n          {projects.map((project) => {\n            return (\n              <div\n                className=\"ProjectObject\"\n                style={{ backgroundColor: project.PrimaryColor }}\n              >\n                <div className=\"ProjectHeader\">{project.Name}</div>\n                <div className=\"ProjectDescription\">\n                  {project.ProjectDescription}\n                </div>\n                <NavLink\n                  className=\"ViewProjectLink\"\n                  style={{ color: project.PrimaryColor }}\n                  to={project.Route}\n                >\n                  Click Here!\n                </NavLink>\n                <Route\n                  path={project.Route}\n                  component={() => (\n                    <CssProject />\n                  )}\n                />\n                <div className=\"ViewGithubLink\">\n                  <a className=\"GithubLink\" href={project.GithubLink}>\n                    Check this out on Github\n                  </a>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","export default {\n  projects: [\n    {\n      Name: \"Color The Face!\",\n      ProjectDescription:\n        \"I found a small API consisting of colors, now we can color things.\",\n      Route: \"/testProject\",\n      Component: \"Test\",\n      GithubLink: \"Thisisalink.com\",\n      PrimaryColor: \"red\",\n      SecondaryColor: \"white\",\n    },\n    {\n      Name: \"Connect4\",\n      ProjectDescription: \"Want to play Connect 4?\",\n      Route: \"Iamalink.com\",\n      GithubLink: \"Thisisalink.com\",\n      PrimaryColor: \"green\",\n      SecondaryColor: \"white\",\n    },\n    {\n      Name: \"Test3\",\n      ProjectDescription: \"This is a project\",\n      Route: \"Iamalink.com\",\n      GithubLink: \"Thisisalink.com\",\n      PrimaryColor: \"blue\",\n      SecondaryColor: \"white\",\n    },\n  ],\n};\n","import React, { Component } from \"react\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"HomeComponent\">\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavListItem = ({ route, linkText, clickHandler }) => {\n  return (\n    <li className=\"HeaderNavItem\">\n      <NavLink className=\"NavLink\" to={route} onClick={clickHandler}>\n        {linkText}\n      </NavLink>\n    </li>\n  );\n};\n\nexport default NavListItem;\n","import React from \"react\";\n\n\nconst SocialMediaHeader = () => {\n  return (\n    <div className=\"SocialMediaBar\">\n      <div className=\"SocialMediaElement\">\n        <a href=\"https://www.google.com\" className=\"NavLink\">\n          Twitter\n        </a>\n      </div>\n      <div className=\"SocialMediaElement\">\n        <a href=\"https://github.com/nathanjonas\" className=\"NavLink\">\n          Github\n        </a>\n      </div>\n      <div className=\"SocialMediaElement\">\n        <a href=\"https://www.linkedin.com/in/nathan-jonas-045839146/\" className=\"NavLink\">\n          LinkedIn\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default SocialMediaHeader;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Contact from \"./Contact/Contact\";\nimport AboutMe from \"./About-Me/AboutMe\";\nimport Projects from \"./Projects/Projects\";\nimport Home from \"./Home/Home\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport NavListItem from \"./layout/NavListItem\";\nimport SocialMediaHeader from \"./layout/SocialMediaHeader\";\nimport CssProject from \"./Projects/ColorTheFace/CssProject\";\n\nconst homeRoute = \"/\";\nconst aboutMeRoute = \"/aboutme\";\nconst projectsRoute = \"/projects\";\nconst contactRoute = \"/contact\";\nconst cssRoute = \"/testProject\";\n\nfunction App() {\n  const [isHomepage, setIsHomepage] = useState(false);\n\n  return (\n      <HashRouter>\n        <SocialMediaHeader />\n\n        <div className=\"HeaderBar\">\n          <div className={isHomepage ? \"HeaderName\" : \"MinimizedHeaderName\"}>\n            <NavLink\n              className=\"NavLink\"\n              exact\n              to={homeRoute}\n              onClick={() => setIsHomepage(true)}\n            >\n              <span className=\"HeaderBarDescriber\">Designer | </span>\n              Nathan Jonas\n              <span className=\"HeaderBarDescriber\">| Developer</span>\n            </NavLink>\n          </div>\n\n          <div className={isHomepage ? \"NavBar\" : \"MinimizedNavBar\"}>\n            <ul className=\"HeaderUl\">\n              <NavListItem\n                route={aboutMeRoute}\n                linkText=\"Who am I?\"\n                clickHandler={() => setIsHomepage(false)}\n              />\n              <NavListItem\n                route={projectsRoute}\n                linkText=\"Projects\"\n                clickHandler={() => setIsHomepage(false)}\n              />\n              <NavListItem\n                route={contactRoute}\n                linkText=\"Contact\"\n                clickHandler={() => setIsHomepage(false)}\n              />\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          <Route exact path={homeRoute} component={Home} />\n          <Route path={aboutMeRoute} component={AboutMe} />\n          <Route path={projectsRoute} component={Projects} />\n          <Route path={contactRoute} component={Contact} />\n          <Route path={cssRoute} component={CssProject} />\n        </div>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_COLORS } from \"./actions\";\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_COLORS:\n      return action.colors;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport colors from \"./colors/index\";\n\nexport default combineReducers({\n    colors,\n});\n","const colorsUrl = \"https://api.color.pizza/v1/?goodnamesonly=true\";\n\nexport const SET_COLORS = \"SET_COLORS\";\n\nexport function getColors() {\n  return (dispatch) =>\n    fetch(colorsUrl)\n      .then((res) => res.json())\n      .then((res) => res.colors)\n      .then((colors) => dispatch(setColors(colors)));\n}\n\nexport function setColors(colors) {\n    return {\n        type: SET_COLORS,\n        colors\n    };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './About-Me/AboutMe.css';\nimport './Projects/Projects.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport { getColors } from \"./reducer/colors/actions\";\n\nconst store = createStore(reducer, compose(\n  applyMiddleware(thunk),\n  window.devToolsExtension ? window.devToolsExtension() : f => f\n));\n\nstore.dispatch(getColors());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}